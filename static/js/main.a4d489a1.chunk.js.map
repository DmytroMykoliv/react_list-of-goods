{"version":3,"sources":["component/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","props","goods","showByLength","reverse","sortBy","isAlphabet","reset","options","Array","from","length","_","i","className","map","good","Button","variant","type","onClick","name","id","onChange","number","value","goodsFromServer","App","state","startButton","isReversed","sortByAlphabet","sortByLength","showLength","visibleGoods","filter","sort","a","b","localeCompare","setState","currentState","event","target","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4d489a1.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  goods: string[],\n  showByLength: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  reverse: () => void,\n  sortBy: (sortBy: string) => void,\n  isAlphabet: boolean,\n  reset: () => void,\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const {\n    goods,\n    showByLength,\n    reverse,\n    sortBy,\n    isAlphabet,\n    reset,\n  } = props;\n  const options = Array.from({ length: 10 }, (_, i) => i + 1);\n\n  return (\n    <div className=\"App__content\">\n      <ul className=\"App__list\">\n        {goods.map((good) => (\n          <li key={good} className=\"App__item\">\n            {good}\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"App__buttons\">\n        <Button\n          className=\"App__btn\"\n          variant=\"outline-secondary\"\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </Button>\n\n        <Button\n          className=\"App__btn\"\n          variant=\"outline-secondary\"\n          type=\"button\"\n          onClick={() => sortBy('alphabet')}\n        >\n          Sort alphabetically\n          {isAlphabet && ': ON'}\n        </Button>\n\n        <Button\n          className=\"App__btn\"\n          variant=\"outline-secondary\"\n          type=\"button\"\n          onClick={() => sortBy('length')}\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          className=\"App__btn\"\n          variant=\"outline-secondary\"\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </Button>\n\n        <select\n          className=\"App__select\"\n          name=\"goodsLength\"\n          id=\"goodsLength\"\n          onChange={showByLength}\n        >\n          {options.map((number) => (\n            <option key={number} value={number}>\n              {number}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { GoodsList } from './component/GoodsList';\n\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  startButton: boolean,\n  isReversed: boolean,\n  sortByAlphabet: boolean,\n  sortByLength: boolean,\n  showLength: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    startButton: false,\n    isReversed: false,\n    sortByAlphabet: false,\n    sortByLength: false,\n    showLength: 1,\n  };\n\n  visibleGoods = () => {\n    const {\n      goods,\n      isReversed,\n      sortByAlphabet,\n      sortByLength,\n      showLength,\n    } = this.state;\n\n    let visibleGoods = goods.filter(good => good.length > showLength);\n\n    if (isReversed) {\n      visibleGoods = [...visibleGoods].reverse();\n    }\n\n    if (sortByAlphabet) {\n      visibleGoods = [...visibleGoods]\n        .sort((a: string, b: string) => (\n          a.localeCompare(b)\n        ));\n    }\n\n    if (sortByLength) {\n      visibleGoods = [...visibleGoods]\n        .sort((a, b) => a.length - b.length);\n    }\n\n    return visibleGoods;\n  };\n\n  reverse = () => {\n    this.setState((currentState) => ({\n      sortByLength: false,\n      isReversed: !currentState.isReversed,\n    }));\n  };\n\n  sortBy = (sortBy: string) => {\n    if (sortBy === 'alphabet') {\n      this.setState((currentState) => ({\n        sortByAlphabet: !currentState.sortByAlphabet,\n      }));\n    }\n\n    if (sortBy === 'length') {\n      this.setState((currentState) => ({\n        sortByLength: !currentState.sortByLength,\n      }));\n    }\n  };\n\n  showByLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState(() => ({\n      showLength: +value,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      goods: goodsFromServer,\n      startButton: false,\n      isReversed: false,\n      sortByAlphabet: false,\n      sortByLength: false,\n      showLength: 1,\n    }));\n  };\n\n  render() {\n    const visibleGoods = this.visibleGoods();\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {!this.state.startButton && (\n          <Button\n            type=\"button\"\n            variant=\"outline-secondary\"\n            onClick={() => {\n              this.setState({ startButton: true });\n            }}\n          >\n            START\n          </Button>\n        )}\n\n        {this.state.startButton && (\n          <GoodsList\n            goods={visibleGoods}\n            showByLength={this.showByLength}\n            reverse={this.reverse}\n            sortBy={this.sortBy}\n            isAlphabet={this.state.sortByAlphabet}\n            reset={this.reset}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}